[
  {
    "prompt": "What are the total number of experience of all users?",
    "ms_sql": "SELECT CONCAT(FirstName, ' ', LastName) AS UserName, TotalExperience  FROM EpiUsers;"
  },
  {
    "prompt": "What is the total number of steps taken by each user in the system?",
    "ms_sql": "SELECT CONCAT(E.FirstName, ' ', E.LastName) AS UserName, COUNT(G.Sequence) AS TotalSteps FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId GROUP BY E.FirstName, E.LastName;"
  },
  {
    "prompt": "Which users have the maximum number of datapoints in their sessions?",
    "ms_sql": "SELECT TOP 1 CONCAT(E.FirstName, ' ', E.LastName) AS UserName, SUM(G.NumberOfDatapoints) AS TotalDatapoints FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId GROUP BY E.FirstName, E.LastName ORDER BY TotalDatapoints DESC;"
  },
  {
    "prompt": "How many exceptions were logged for each user?",
    "ms_sql": "SELECT CONCAT(E.FirstName, ' ', E.LastName) AS UserName, SUM(G.NumberOfExceptions) AS TotalExceptions FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId GROUP BY E.FirstName, E.LastName;"
  },
  {
    "prompt": "What is the average duration of steps per user?",
    "ms_sql": "SELECT CONCAT(E.FirstName, ' ', E.LastName) AS UserName, AVG(G.StepDuration) AS AvgStepDuration FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId GROUP BY E.FirstName, E.LastName;"
  },
  {
    "prompt": "How many users have completed structured data steps?",
    "ms_sql": "SELECT COUNT(DISTINCT E.Id) AS UsersWithStructuredData FROM EpiUsers E JOIN GpsLog G ON E.Id = G.UserId WHERE G.IsStructuredData = 1;"
  },
  {
    "prompt": "What is the total number of input steps performed by each user?",
    "ms_sql": "SELECT CONCAT(E.FirstName, ' ', E.LastName) AS UserName, COUNT(G.StepId) AS InputSteps FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId WHERE G.IsInputStep = 1 GROUP BY E.FirstName, E.LastName;"
  },
  {
    "prompt": "What is the total number of navigation steps performed by each user?",
    "ms_sql": "SELECT CONCAT(E.FirstName, ' ', E.LastName) AS UserName, COUNT(G.StepId) AS NavigationSteps FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId WHERE G.IsNavigationStep = 1 GROUP BY E.FirstName, E.LastName;"
  },
  {
    "prompt": "Which user has the most steps with an automatable rate greater than 80%?",
    "ms_sql": "SELECT TOP 1 CONCAT(E.FirstName, ' ', E.LastName) AS UserName, COUNT(G.StepId) AS AutomatableSteps FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId WHERE G.AutomatibilityRate > 80 GROUP BY E.FirstName, E.LastName ORDER BY AutomatableSteps DESC;"
  },
  {
    "prompt": "What is the total number of input steps and structured data steps combined for each user?",
    "ms_sql": "SELECT CONCAT(E.FirstName, ' ', E.LastName) AS UserName, COUNT(G.StepId) AS TotalInputAndStructuredSteps FROM EpiUsers E LEFT JOIN GpsLog G ON E.Id = G.UserId WHERE G.IsInputStep = 1 OR G.IsStructuredData = 1 GROUP BY E.FirstName, E.LastName;"
  },
  {
    "prompt": "How many unique users performed actions on the application 'Salesforce'?",
    "ms_sql": "SELECT COUNT(DISTINCT E.Id) AS UsersOnSalesforce FROM EpiUsers E JOIN GpsLog G ON E.Id = G.UserId WHERE G.ApplicationURL LIKE '%Salesforce%';"
  },
  {
    "prompt": "Show me the User's Average AHT Status",
    "ms_sql": "WITH ParsedData AS ( SELECT E.Id AS UserId, E.FirstName, E.LastName, CAST(LEFT(AHT, CHARINDEX('-', AHT) - 1) AS FLOAT) AS StartValue, CAST(RIGHT(AHT, LEN(AHT) - CHARINDEX('-', AHT)) AS FLOAT) AS EndValue FROM EpiUsers E JOIN ProcessMetrices P ON P.UserId = E.Id WHERE AHT LIKE '%-%'), AHTCalculation AS ( SELECT UserId, FirstName, LastName, (StartValue + EndValue) / 2 AS AverageAHT FROM ParsedData ) SELECT FirstName + ' ' + LastName AS UserName, AVG(AverageAHT) AS OverallAverageAHT FROM AHTCalculation GROUP BY UserId, FirstName, LastName;"
  }
]
